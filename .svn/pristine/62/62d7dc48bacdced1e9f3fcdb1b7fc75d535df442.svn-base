package com.zhidisoft.system.controller;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.zhidisoft.common.JsonResult;
import com.zhidisoft.common.PageBean;
import com.zhidisoft.system.entity.Leads;
import com.zhidisoft.system.entity.ProductCategory;
import com.zhidisoft.system.entity.User;
import com.zhidisoft.system.service.IProductCategoryService;

@Controller
@RequestMapping("/system/product")
public class ProductController {

	
	@Autowired
	private IProductCategoryService productCategoryService;
	
	
	@RequestMapping("/product")
	public String index(){
		return "system/listProduct";
	}
	
	@RequestMapping("/addProCategory")
	public String index1(){
		return "system/addProCategory";
	}
	
	
	@RequestMapping("/editCategory")
	public String index2(){
		return "system/editCategory";
	}
	
	
	
	
	
	
	
	
	
	
	
	
	@RequestMapping("/findByPage")
	@ResponseBody
	public JsonResult findByPage(PageBean<Map<String , Object>> pageBean,HttpSession session){
		
		int total = productCategoryService.count(pageBean.getCondition());
		List<Map<String , Object>> list = productCategoryService.findMapByPage(pageBean.getPage(),pageBean.getRows(),pageBean.getCondition());
		
		pageBean.setTotal(total);
		pageBean.setResult(list);
		
		return JsonResult.buildSuccessResult("查询成功", pageBean);
	}
	
	
	@RequestMapping("/listCategory")
	@ResponseBody
	public JsonResult listCategory(){
		List<ProductCategory> list = productCategoryService.findAll();
		
		return JsonResult.buildSuccessResult("查询成功", list);
	}
	
	@RequestMapping("/saveCategory")
	@ResponseBody
	public JsonResult saveCategory(ProductCategory category){
		boolean b = productCategoryService.save(category);
		
			if (b) {
					return JsonResult.buildSuccessResult("创建成功");
				}else {
					return JsonResult.buildSuccessResult("创建失败");
				}
			}
	
	//查看修改页面
			@RequestMapping(value="/editProCategory",method=RequestMethod.GET)
			@ResponseBody
			public ModelAndView  edit(ModelAndView model,Integer id){
				
				ProductCategory category = productCategoryService.get(id);
				
				model.addObject("category", category);
				model.setViewName("forward:editCategory");
			    return model;
			}

			
	//保存修改
	@RequestMapping("/saveEditCategory")
	@ResponseBody
	public JsonResult saveEditCategory(ProductCategory category){
		boolean b = productCategoryService.update(category);
		

		if (b) {
				return JsonResult.buildSuccessResult("修改成功");
			}else {
				return JsonResult.buildSuccessResult("修改失败");
			}
			
		}
	
	
	
	
	//删除类别
	@RequestMapping("/deleteCategory")
	@ResponseBody
	public JsonResult deleteCategory(Integer id){
		boolean b = productCategoryService.delete(id);
		
			if (b) {
					return JsonResult.buildSuccessResult("删除成功");
				}else {
					return JsonResult.buildSuccessResult("删除失败");
				}
			}	

	
	
	
	
}
