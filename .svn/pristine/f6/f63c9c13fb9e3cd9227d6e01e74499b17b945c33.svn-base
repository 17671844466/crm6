package com.zhidisoft.system.controller;

import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.request;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.zhidisoft.common.JsonResult;
import com.zhidisoft.common.PageBean;
import com.zhidisoft.system.dao.ILeadsDao;
import com.zhidisoft.system.entity.Leads;
import com.zhidisoft.system.entity.User;
import com.zhidisoft.system.service.ILeadsService;
import com.zhidisoft.system.service.IUserService;

@Controller
@RequestMapping("/system/leads")
public class LeadsController {
	@Autowired
	private ILeadsService leadsService;
	
	@Autowired
	private IUserService userService;
	
	@RequestMapping("/leads")
	public String index(){
		return "system/listLeads";
	}
	
	
	@RequestMapping("/addLeads")
	public String index2(){
		return "system/addLeads";
	}
	
	@RequestMapping("/datailed")
	public String index3(){
		return "system/leadsInfo";
	}
	
	/**
	 * 分页查询用户信息
	 * @param pageNumber
	 * @param pageSize
	 * @param condition
	 * @return
	 */
	@RequestMapping("/findByPage")
	@ResponseBody
	public JsonResult findByPage(PageBean<Map<String , Object>> pageBean){
			
		int total = leadsService.count(pageBean.getCondition());
		List<Map<String , Object>> list = leadsService.findMapByPage(pageBean.getPage(),pageBean.getRows(),pageBean.getCondition());
	
		
		pageBean.setTotal(total);
		pageBean.setResult(list);
		
		return JsonResult.buildSuccessResult("查询成功", pageBean);
	}
	
	
	@RequestMapping("/listUser")
	@ResponseBody
	public JsonResult listUser(){
		List<User> list = userService.findAll();
		
		return JsonResult.buildSuccessResult("查询成功", list);
	}
	
	@RequestMapping("/saveLeads")
	@ResponseBody
	public JsonResult saveLeads(Leads leads,HttpSession session){
		
			leads.setCreateTime(new Date());
			leads.setUpdateTime(new Date());
			leads.setHaveTime(new Date());
			
			User user = (User) session.getAttribute("user");
			leads.setCreatorUserId(user.getId());
			
			boolean b = leadsService.save(leads);
			if (b) {
				return JsonResult.buildSuccessResult("创建成功");
			}else {
				return JsonResult.buildSuccessResult("创建失败");
			}
		
		}
		
		
		

	
	@RequestMapping("/deleteLeads")
	@ResponseBody
	public JsonResult deleteLeads(String id,HttpSession session){
		String[] ids = id.split(",");
		int d = 0;
		for (String leadsId : ids) {
			int i = Integer.parseInt(leadsId);
			
			Leads leads = leadsService.get(i);
			
			//判断DeleteStatus
			if (leads.getDeleteStatus()==0) {
				leads.setDeleteStatus(1);
				leads.setDeleteTime(new Date());
				User user = (User) session.getAttribute("user");
				leads.setDeleteUserId(user.getId());
				boolean b = leadsService.update(leads);
				if (!b) {
					break;
				}
				d=1;
			}else {
				boolean b = leadsService.delete(i);
				if (!b) {
					break;
				}
				d=2;
			}
			
		}
		if (d==1) {
			return JsonResult.buildSuccessResult("您所选择的数据已放入回收站",1);
		}else if (d==2) {
			return JsonResult.buildSuccessResult("您所选择的数据已从回收站删除",2);
		}else {
			return JsonResult.buildSuccessResult("删除失败",0);
		}
		
	}
	
	//查看详情
	@RequestMapping(value="/detail",method=RequestMethod.GET)
	@ResponseBody
	public ModelAndView  detailed(ModelAndView model,String ownerName,Integer id){
		
		Leads leads = leadsService.get(id);
		Date date = leads.getNextstepTime();
		SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd");
		String nextstepTime = simpleDateFormat.format(date);
		model.addObject("leads", leads);
		model.addObject("ownerUser", ownerName);
		model.addObject("nextstepTime", nextstepTime);
		model.setViewName("forward:datailed");
	    return model;
	}
	
	
	
	
}
