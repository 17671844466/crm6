package com.zhidisoft.system.controller;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;

import javax.annotation.Resource;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Param;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.mysql.fabric.xmlrpc.base.Array;
import com.zhidisoft.common.JsonResult;
import com.zhidisoft.common.PageBean;
import com.zhidisoft.system.entity.Task;
import com.zhidisoft.system.service.ITaskService;
/**
 * 任务版块
 * 钟晶
 * @author Administrator
 *
 */
@Controller
@RequestMapping("/task")
@SuppressWarnings("all")
public class TaskController {
	
	@Autowired
	private ITaskService taskService;
	
	@GetMapping("/task")
	public String toTask(){
		return "system/task";
	}
	
	@PostMapping("/task")
	public void index(){
		
	}
	
	/**
	 * 删除功能
	 */
	@RequestMapping("/delete")
	@ResponseBody
	public JsonResult Delete(String id){
		System.out.println(id);
		boolean data = taskService.delete(Integer.valueOf(id));
		if(data){
			return JsonResult.buildSuccessResult("删除成功", data);
		}else
			return JsonResult.buildFailureResult("删除失败");
		
	}
	
	/**
	 * 下拉框查询表格数据
	 * @return
	 */
	@PostMapping("/findAll")
	@ResponseBody
	public JsonResult findAll(){
		List<Map<String, Object>> list=taskService.findAlls();
		List<String> keys = new ArrayList<>();
		List<Object> values=new ArrayList<>();
		Map<String, Object> map = new HashMap<>();
		map.put("keys", keys);
		map.put("values", values);
		Iterator<Entry<String, Object>> iterator = list.get(0).entrySet().iterator();
		while (iterator.hasNext()) {
			keys.add(iterator.next().getKey());
			values.add(iterator.next().getValue());
		}
		list.add(map);
		return JsonResult.buildSuccessResult("查询成功", list);
	}
	
	/**
	 * 任务页面分页查询
	 * @return
	 */
	@RequestMapping("/findByPage")
	@ResponseBody
	public JsonResult findByPage(PageBean<Map<String, Object>> pagebean){
		int total = taskService.count(pagebean.getCondition());
		System.out.println("--------------------------------------------");
		List<Map<String, Object>> list=taskService.findByPage(pagebean.getPage(),pagebean.getRows(),pagebean.getCondition());
		pagebean.setTotal(total);
		pagebean.setResult(list);
		return JsonResult.buildSuccessResult("查询成功", pagebean);
	}
}
